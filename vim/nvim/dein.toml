[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  call denite#custom#var('file_rec', 'command',
      \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#var('grep', 'separator', [])
  call denite#custom#var('grep', 'default_opts',
      \ ['--nocolor', '--nogroup'])
  nnoremap <silent><C-k>f :Denite -mode=normal file_rec<CR>
  nnoremap <silent><C-k>g :Denite buffer -mode=normal<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
hook_add = 'let g:deoplete#enable_at_startup = 1'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    nnoremap <silent>q :ccl<CR>
    let g:quickrun_config = get(g:, 'quickrun_config', {})

    if filereadable('in')
        nnoremap <silent> , :ccl<CR> :QuickRun<in -mode n<CR>
    else
        nnoremap <silent> , :ccl<CR> :QuickRun -mode n<CR>
    endif

    let g:quickrun_config._ = {
    \   'outputter' : 'error',
    \   'outputter/error/success' : 'quickfix',
    \   'outputter/error/error'   : 'quickfix',
    \   'outputter/buffer/split'  : ':rightbelow 8sp',
    \ }
    let g:quickrun_config.cpp = {
    \   'command':'clang++',
    \   'cmdopt':'-std=c++11'
    \}
    let g:quickrun_config.cs = {
    \   'command':'mcs',
    \}
    let g:quickrun_config.python = {
    \   'command':'python3',
    \}
'''

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
    autocmd! BufWritePost,BufEnter * Neomake
    let g:neomake_error_sign = {'text': '>>', 'texthl':'Error'}
    let g:neomake_warning_sign = {'text': '>>', 'texthl': 'Todo'}

    let g:neomake_cpp_enable_markers=['clang']

    if findfile('.eslintrc.js', '.;') !=# ''
      let g:neomake_javascript_enabled_makers=['eslint']
      let g:neomake_javascript_eslint_maker = {
          \ 'exe': $PWD . '/node_modules/.bin/eslint',
          \ 'args': ['-f', 'compact'],
          \ 'errorformat': '%f: line %l\, col %c\, %m'
          \ }
    endif
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  map <C-n> :NERDTree<CR>
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'airblade/vim-gitgutter'
