[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
    nnoremap D :Denite file_rec<Esc>
    nnoremap L :Denite line<Esc>
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
hook_add = 'let g:deoplete#enable_at_startup = 1'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    nnoremap <silent> q :ccl<CR>
    let g:quickrun_config = get(g:, 'quickrun_config', {})
    if filereadable('in')
        nnoremap <silent> <Leader>r :ccl<CR> :write<CR> :QuickRun<in<CR>
    else
        nnoremap <silent> <Leader>r :ccl<CR> :write<CR> :QuickRun<CR>
    endif
    let g:quickrun_config._ = {
    \   'outputter' : 'error',
    \   'outputter/error/success' : 'quickfix',
    \   'outputter/error/error'   : 'quickfix',
    \ }
    let g:quickrun_config.cpp = {
    \   'command':'clang++',
    \   'cmdopt':'-std=c++11 -I/opt/boost/gcc/include -L/opt/boost/gcc/lib'
    \}
    let g:quickrun_config.cs = {
    \   'command':'mcs',
    \}
'''

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
    autocmd! BufWritePost * Neomake
    let g:neomake_error_sign = {'text': '>>', 'texthl':'Error'}
    let g:neomake_warning_sign = {'text': '>>', 'texthl': 'Todo'}
'''
