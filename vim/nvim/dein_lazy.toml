[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = 'javascript'
hook_add = '''
let g:jsx_ext_required = 0
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = 'javascript'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'Shougo/vinarise.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  map <C-n> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 0
let g:deoplete#enable_ignore_case = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#max_list = 10
'''

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
    autocmd! BufWritePost,BufEnter * Neomake
    let g:neomake_error_sign = {'text': '>>', 'texthl':'Error'}
    let g:neomake_warning_sign = {'text': '>>', 'texthl': 'Todo'}

    let g:neomake_cpp_enable_markers=['clang']

    let g:neomake_javascript_eslint_maker = {
        \ 'exe': 'standard',
        \ 'errorformat': '%W  %f:%l:%c: %m'
        \ }
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    nnoremap <silent>q :ccl<CR>
    let g:quickrun_config = get(g:, 'quickrun_config', {})

    if filereadable('in')
        nnoremap <silent> , :ccl<CR> :QuickRun<in -mode n<CR>
    else
        nnoremap <silent> , :ccl<CR> :QuickRun -mode n<CR>
    endif

    let g:quickrun_config._ = {
    \   'outputter' : 'error',
    \   'outputter/error/success' : 'quickfix',
    \   'outputter/error/error'   : 'quickfix',
    \   'outputter/buffer/split'  : ':rightbelow 8sp',
    \ }
    let g:quickrun_config.cpp = {
    \   'command':'clang++',
    \   'cmdopt':'-std=c++11'
    \}
    let g:quickrun_config.cs = {
    \   'command':'mcs',
    \}
    let g:quickrun_config.python = {
    \   'command':'python3',
    \}
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
imap <expr><TAB>
\ pumvisible() ? "\<C-n>" :
\ neosnippet#expandable_or_jumpable() ?
\    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

'''
